{"version":3,"sources":["context/TestContext.js","components/Question.js","components/QuestionMap.js","components/TestPage.js","components/Theme.js","utils/randomize.js","components/WelcomePage.js","components/TestStatsPage.js","App.js","routes.js","index.js"],"names":["TestContext","createContext","themes","timeEnd","progress","timeStart","questions","setThemes","setTimeEnd","setProgress","setTimeStart","setQuestions","Question","current","setAnswer","setCurrent","getDiff","start","moment","Date","subtract","format","useEffect","timerId","setInterval","document","querySelector","innerHTML","clearInterval","options","map","option","i","className","userAnswer","answer","text","disabled","onClick","currentPosition","q","question","indexOf","disabledBack","disabledForward","length","theme","_","Object","assign","to","href","QuestionMap","grid","replace","title","event","number","target","getAttribute","_setCurrent","preventDefault","buttonNumber","TestPage","newQuestions","Array","from","Theme","toggleTheme","selected","htmlFor","id","checked","onChange","type","name","shuffleArray","array","j","Math","floor","random","temp","WelcomePage","_themes","push","filter","t","themesObj","themeAPZ","themeAPZ2","preSelected","themesElements","startDisabled","obj","theme_questions","isAnswer","concat","TestStatsPage","groups","questionsGroup","g","grouped","group","correct","App","routes","path","exact","Consumer","useState","context","Provider","value","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1a9ec894.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const TestContext = createContext({\r\n    themes: [],\r\n    timeEnd: [],\r\n    progress: [],\r\n    timeStart: [],\r\n    questions: [],\r\n    setThemes: () => {},\r\n    setTimeEnd: () => {},\r\n    setProgress: () => {},\r\n    setTimeStart: () => {},\r\n    setQuestions: () => {},\r\n});\r\n","import React, { useEffect } from 'react'\r\nimport moment from 'moment'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Question({ current, questions, setAnswer, setCurrent, timeStart }) {\r\n\r\n    let getDiff = () => {\r\n        let start = moment(timeStart)\r\n        let end = moment(new Date())\r\n        return end.subtract(start).format(\"mm:ss\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        let setTime = () => {\r\n            document.querySelector(\".question__timer\").innerHTML = getDiff()\r\n        }\r\n\r\n        let timerId = setInterval(setTime, 1000)\r\n        return () => {\r\n            clearInterval(timerId)\r\n        }\r\n    })\r\n\r\n    let moveBack = (_) => {\r\n        let currentPosition = questions.map(q => q.question).indexOf(current.question)\r\n        if (currentPosition !== 0) {\r\n            setCurrent(Object.assign({}, questions[currentPosition - 1]))\r\n        }\r\n    }\r\n\r\n    let moveForward = (_) => {\r\n        let currentPosition = questions.map(q => q.question).indexOf(current.question)\r\n        if (currentPosition !== questions.length - 1) {\r\n            setCurrent(Object.assign({}, questions[currentPosition + 1]))\r\n        }\r\n    }\r\n\r\n    if (!current.options)\r\n        return \"\"\r\n    let options = current.options.map((option, i) => {\r\n        let className = \"bg-indigo-500 text-white font-semibold rounded-md\"\r\n        if (current.userAnswer !== \"\") {\r\n            if (current.userAnswer !== current.answer) {\r\n                if (option.text === current.answer) {\r\n                    className = \"bg-green-500 text-white font-semibold rounded-md\"\r\n                }\r\n                if (option.text === current.userAnswer) {\r\n                    className = \"bg-red-500 text-white font-semibold rounded-md\"\r\n                }\r\n            }\r\n            if (current.userAnswer === current.answer) {\r\n                if (option.text === current.userAnswer) {\r\n                    className = \"bg-green-500 text-white font-semibold rounded-md\"\r\n                }\r\n            }\r\n        }\r\n        return <button\r\n            disabled={current.userAnswer !== \"\"}\r\n            className={className}\r\n            key={\"option-\" + i}\r\n            onClick={() => setAnswer(option.text)}\r\n        >\r\n            {/* {i + 1}. {option.text} */}\r\n            {option.text}\r\n        </button>\r\n    })\r\n    let currentPosition = questions.map(q => q.question).indexOf(current.question)\r\n    let disabledBack = currentPosition === 0\r\n    let disabledForward = currentPosition === questions.length - 1\r\n    return (\r\n        [\r\n            <div key={\"content\"} className=\"question__content bg-indigo-900 rounded-md text-white\">\r\n                <h1 className=\"font-semibold\">{current.theme}</h1>\r\n                <h1 className=\"question__timer font-semibold\">{getDiff()}</h1>\r\n                <h1 className=\"font-semibold\">{currentPosition + 1}. {current.question}</h1>\r\n            </div>,\r\n            <div key={\"options\"} className=\"question__options\">\r\n                {options}\r\n            </div>,\r\n            <div key={\"controls\"} className=\"question__controls\">\r\n                <button key=\"back\" onClick={moveBack} disabled={disabledBack} className=\"bg-blue-700 hover:bg-blue-900 text-white font-bold rounded-md\">&#8592;</button>\r\n                <Link to=\"/result\" href=\"##\" key=\"stop\" className=\"bg-red-500 hover:bg-red-700 text-white font-semibold rounded-md\">Закончить</Link>\r\n                <button key=\"forward\" onClick={moveForward} disabled={disabledForward} className=\"bg-blue-700 hover:bg-blue-900 text-white font-bold rounded-md\">&#8594;</button>\r\n            </div>\r\n        ]\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function QuestionMap({ current, questions, setCurrent }) {\r\n    let currentPosition = questions.map(q => q.question).indexOf(current.question)\r\n\r\n    let grid = questions.map((question, i) => {\r\n        let className = \"font-bold hover:border-1 rounded-md bg-blue-200 hover:bg-blue-300\"\r\n        if (currentPosition === i)\r\n            className = \"font-bold border-2 ring-2 ring-opacity-75 ring-blue-700 rounded-md bg-blue-200\"\r\n        if (question.userAnswer && question.userAnswer === question.answer) {\r\n            className = className.replace(/bg-\\w*-\\d{3}/, \" bg-green-200\")\r\n        } else if (question.userAnswer && question.userAnswer !== question.answer) {\r\n            className = className.replace(/bg-\\w*-\\d{3}/, \" bg-red-200\")\r\n        }\r\n        return (\r\n            <button\r\n                className={className}\r\n                title={question.question}\r\n                data-number={i}\r\n                key={\"button-map-\" + i}\r\n                onClick={(event) => {\r\n                    let number = event.target.getAttribute(\"data-number\")\r\n                    _setCurrent(number)\r\n                    event.preventDefault()\r\n                }}\r\n            >{i + 1}</button>\r\n        )\r\n    })\r\n\r\n    let _setCurrent = (buttonNumber) => {\r\n        setCurrent(questions[buttonNumber])\r\n    }\r\n\r\n    return (\r\n        <div className=\"map\">\r\n            {grid}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Question from \"./Question\"\r\nimport QuestionMap from './QuestionMap'\r\n\r\nexport default function TestPage({ current, themes, questions, timeStart, setQuestions, setCurrent }) {\r\n    useEffect(() => {\r\n        setCurrent(questions[0])\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    if (!themes || themes.length === 0 || !questions || questions.length === 0) {\r\n        return <Redirect to=\"/start\" />\r\n    }\r\n\r\n    let setAnswer = (answer) => {\r\n        let currentPosition = questions.map(q => q.question).indexOf(current.question)\r\n        let newQuestions = Array.from(questions)\r\n        let question = newQuestions[currentPosition]\r\n        question.userAnswer = answer\r\n        setQuestions(newQuestions)\r\n    }\r\n\r\n    return (\r\n        <div className=\"question container\">\r\n            {current ? <Question setAnswer={setAnswer} timeStart={timeStart} current={current} questions={questions} setCurrent={setCurrent} /> : \"\"}\r\n            {current ? <QuestionMap current={current} setCurrent={setCurrent} questions={questions} /> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Theme({ theme, toggleTheme, selected }) {\r\n    return (\r\n        <div\r\n            className=\"rounded-md\r\n                        select-container\r\n                        bg-indigo-500\r\n                        hover:bg-indigo-700\r\n                        text-white\r\n                        text-center\r\n                        font-bold\"\r\n        >\r\n            <label htmlFor={theme.id}>\r\n                <input\r\n                    className=\"text-green-500\"\r\n                    checked={selected}\r\n                    onChange={() => toggleTheme(theme)}\r\n                    type=\"checkbox\"\r\n                    id={theme.id}\r\n                />\r\n                <span>{theme.name}</span>\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n","export default function shuffleArray(array) {\r\n    for (var i = array.length - 1; i > 0; i--) {\r\n        var j = Math.floor(Math.random() * (i + 1));\r\n        var temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n    }\r\n}","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport themeAPZ from \"./../questions/apz.json\";\r\nimport themeAPZ2 from \"./../questions/apz2.json\";\r\nimport Theme from \"./Theme\";\r\nimport shuffleArray from \"../utils/randomize\";\r\n\r\nexport default function WelcomePage({ themes, setThemes, setQuestions, setTimeStart }) {\r\n    let toggleTheme = (theme) => {\r\n        let _themes = Array.from(themes);\r\n        if (_themes.indexOf(theme.name) === -1) _themes.push(theme.name);\r\n        else _themes = _themes.filter((t) => t !== theme.name);\r\n        setThemes(_themes);\r\n    };\r\n    let themesObj = [themeAPZ, themeAPZ2];\r\n\r\n    useEffect(() => {\r\n        let preSelected = [themeAPZ, themeAPZ2].filter((t) => t.selected);\r\n        setThemes(preSelected.map(t => t.name))\r\n        return () => { }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    let themesElements = Array.from(themesObj);\r\n    themesElements = themesElements.map((t, i) => {\r\n        return <Theme\r\n            key={\"theme-\" + i}\r\n            theme={Object.assign({}, t, { id: i })}\r\n            toggleTheme={toggleTheme}\r\n            selected={themes.indexOf(t.name) !== -1}\r\n        />\r\n    });\r\n\r\n    let startTest = (_) => {\r\n        let _themes = themesObj.filter(obj => themes.indexOf(obj.name) !== -1)\r\n        let questions = []\r\n        for (let theme of _themes) {\r\n            let theme_questions = []\r\n            for (let question of theme.questions) {\r\n                let options = question.options.map((option) => {\r\n                    return {\r\n                        text: option[0],\r\n                        isAnswer: option[1]\r\n                    }\r\n                })\r\n                shuffleArray(options)\r\n                theme_questions.push({\r\n                    theme: theme.name,\r\n                    question: question.question,\r\n                    userAnswer: \"\",\r\n                    answer: question.options.filter(option => option[1] === 1)[0][0], // option = [текст, isAnswer]\r\n                    options: options\r\n                })\r\n            }\r\n            shuffleArray(theme_questions)\r\n            questions = questions.concat(theme_questions)\r\n        }\r\n        setQuestions(questions)\r\n        setTimeStart(new Date())\r\n    }\r\n\r\n    let startDisabled = themes.length === 0;\r\n    return (\r\n        <div className=\"welcome container\">\r\n            <h1 className=\"text-3xl font-bold text-black welcome__header self-center\">\r\n                Вопросы на магистратуру 2020\r\n            </h1>\r\n            <h1 className=\"text-2xl font-bold text-black welcome__header\">\r\n                Выбор тем\r\n            </h1>\r\n            <div className=\"welcome__themes\">{themesElements}</div>\r\n            <div className=\"welcome__start\">\r\n                <Link\r\n                    className=\"welcome__start shadow-md rounded-md font-bold bg-indigo-500 hover:bg-indigo-700 text-white text-center\"\r\n                    to=\"/test\"\r\n                    onClick={startTest}\r\n                    disabled={startDisabled}\r\n                >\r\n                    Начать\r\n                </Link>\r\n                {/* <div className=\"start__mode select-container rounded-md bg-red-700 hover:bg-red-800 text-white text-center font-bold\">\r\n                    <label htmlFor=\"hardmode\">\r\n                        <input\r\n                            id=\"hardmode\"\r\n                            type=\"checkbox\"\r\n                            className=\"checked:bg-red-300 checked:border-transparent\"\r\n                        />\r\n                        <span className=\"cursor-pointer\">Хардмод</span>\r\n                        <img\r\n                            src={heart}\r\n                            className=\"animate-pulse cursor-pointer\"\r\n                            alt=\"\"\r\n                        />\r\n                    </label>\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nexport default function TestStatsPage({ questions }) {\r\n    if (!questions) {\r\n        return <Redirect to=\"/start\" />\r\n    }\r\n    let groups = []\r\n    let questionsGroup = []\r\n    for (let g of questions.filter(q => q.theme)) {\r\n        if (groups.indexOf(g.theme) === -1) {\r\n            groups.push(g.theme)\r\n            questionsGroup.push([])\r\n        } else {\r\n            questionsGroup[groups.indexOf(g.theme)].push(g)\r\n        }\r\n    }\r\n    let grouped = groups.map((g, i) => {\r\n        return {\r\n            theme: g,\r\n            questions: Array.from(questionsGroup[i])\r\n        }\r\n    })\r\n    grouped = grouped.map(group => {\r\n        let correct = group.questions.filter(q => q.answer === q.userAnswer)\r\n        return (\r\n            <div className=\"result__theme rounded-lg bg-indigo-500\">\r\n                <h1 className=\"theme__header text-lg text-white font-semibold font-xl\">{group.theme}</h1>\r\n                <h1 className=\"theme__count text-lg text-white font-semibold font-xl\">Правильных ответов: {correct.length} из {group.questions.length}</h1>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"container result\">\r\n            <div className=\"result__header rounded-lg bg-indigo-900\">\r\n                <h1 className=\"text-white text-lg font-semibold\">Результаты</h1>\r\n            </div>\r\n            <div className=\"result__body\">\r\n                {grouped}\r\n            </div>\r\n            <div className=\"result__controls\">\r\n                <Link to=\"/start\" className=\"result__restart rounded-lg bg-green-500 text-white text-lg font-semibold text-lg\">Начать заново</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { TestContext } from \"./context/TestContext\";\nimport { useRoutes } from \"./routes\";\n\nfunction App() {\n    let routes = useRoutes()\n    const [themes, setThemes] = useState([])\n    const [timeEnd, setTimeEnd] = useState(null)\n    const [timeStart, setTimeStart] = useState(null)\n    const [questions, setQuestions] = useState([])\n    const [current, setCurrent] = useState({})\n\n    const context = {\n        themes: themes,\n        current: current,\n        timeEnd: timeEnd,\n        timeStart: timeStart,\n        questions: questions,\n        setThemes: setThemes,\n        setCurrent: setCurrent,\n        setTimeEnd: setTimeEnd,\n        setTimeStart: setTimeStart,\n        setQuestions: setQuestions\n    }\n\n    return (\n        <TestContext.Provider value={context}>\n            <Router>{routes}</Router>\n        </TestContext.Provider>\n    );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport TestPage from \"./components/TestPage\";\r\nimport WelcomePage from \"./components/WelcomePage\";\r\nimport TestStatsPage from \"./components/TestStatsPage\";\r\nimport { TestContext } from \"./context/TestContext\";\r\n\r\nexport const useRoutes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/start\" exact>\r\n                <TestContext.Consumer>\r\n                    {({ themes, setThemes, setQuestions, setTimeStart }) => {\r\n                        return <WelcomePage\r\n                            themes={themes}\r\n                            setThemes={setThemes}\r\n                            setQuestions={setQuestions}\r\n                            setTimeStart={setTimeStart}\r\n                        />\r\n                    }}\r\n                </TestContext.Consumer>\r\n            </Route>\r\n            <Route path=\"/test\" exact>\r\n                <TestContext.Consumer>\r\n                    {({ themes, questions, setQuestions, current, setCurrent, timeStart }) => {\r\n                        return <TestPage\r\n                            themes={themes}\r\n                            timeStart={timeStart}\r\n                            questions={questions}\r\n                            setQuestions={setQuestions}\r\n                            current={current}\r\n                            setCurrent={setCurrent}\r\n                        />\r\n                    }}\r\n                </TestContext.Consumer>\r\n            </Route>\r\n            <Route path=\"/result\" exact>\r\n                <TestContext.Consumer>\r\n                    {({ questions, timeStart }) => {\r\n                        return <TestStatsPage\r\n                            timeStart={timeStart}\r\n                            questions={questions}\r\n                        />\r\n                    }}\r\n                </TestContext.Consumer>\r\n            </Route>\r\n            <Redirect to=\"/start\" />\r\n        </Switch>\r\n    );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}