{
    "name": "АВПЗ Теорія",
    "selected": 1,
    "questions": [
        {
            "question": "Що належить до обов’язків Scrum майстра у проекті?",
            "options": [
                ["забезпечення Scrum методології та її принципів", 1],
                ["керування пріоритетами історій користувачів", 0],
                ["не брати участі у розробці програмної системи", 0],
                [
                    "використання Product backlog для нарощування функціональності",
                    0
                ],
                ["керування Product backlog", 0]
            ]
        },
        {
            "question": "Що з наведеного нижче, не вважається перевагою у Agile методології?",
            "options": [
                [
                    "Agile, що поширюється на декілька команд, які складаються з великої кількості розробників ",
                    1
                ],
                [
                    "Agile це перевага працездатного ПЗ над документацією, що описує як це ПЗ має працювати",
                    0
                ],
                [
                    "Agile це взаємодія замовника і команди, що покращує процес розробки",
                    0
                ],
                ["Agile це юніт тестування та постійне тестування коду", 0],
                [
                    "Agile це гнучкість роботи з вимогами у ході розробки програмної системи",
                    0
                ]
            ]
        },
        {
            "question": "Філософія керування проектом за Agile-методологією це:",
            "options": [
                [
                    "команда це адаптивна система, що сама налаштовується на процес розробки продукту під керівництвом Scrum майстра",
                    1
                ],
                [
                    "команда це система, яка повністю координується менеджером проекту",
                    0
                ],
                [
                    "команда це система, яка повністю координується тільки замовником проекту",
                    0
                ],
                ["команда не є системою, кожен член команди працює окремо", 0],
                ["команда це лише ресурс team leader проекту", 0]
            ]
        },
        {
            "question": "Яке з наведених нижче тверджень неправильне для Agile?",
            "options": [
                [
                    "зосереджуватися на ідентифікації та покроковій реалізації функціональних та системних вимог, що впливають на графік реалізації проекту",
                    1
                ],
                [
                    "Agile доцільно використовувати на невеликих проектах чи елементах великих проектів",
                    0
                ],
                [
                    "Agile базується на принципах керування та спілкування між людьми",
                    0
                ],
                ["надати працездатне ПЗ за короткі проміжки часу", 0],
                ["працювати як команда, що самовизначається", 0]
            ]
        },
        {
            "question": "На яких 5 вимірах розробки програмного продукту базується індекс Agile?",
            "options": [
                [
                    "короткі релізи, розробка через тестування, команда, що самовизначається, взаємодія з замовником та гнучкість процесу розробки програмного продукту",
                    1
                ],
                [
                    "покрокова розробка, масштабованість, попереднє узгодження вимог, документація та впровадження повністю готового програмного продукту",
                    0
                ],
                [
                    "немає  коротких релізів, тестування тільки готового програмного продукту, керування командою менеджером команди , взаємодія  з замовником та документація",
                    0
                ],
                [
                    "розробка для кожного етапу, попередній менеджмент етапів розробки, тестування готового програмного продукту, документування вимог та менеджмент проекту",
                    0
                ],
                [
                    "ризики, великі системи, інтервали між релізами, багато документації по проекту та спілкування з менеджером проекту",
                    0
                ]
            ]
        },
        {
            "question": "Що зі списку не є Agile-методологією?",
            "options": [
                ["RUP", 1],
                ["eXtreame програмування", 0],
                ["TDD (підхід test driven development", 0],
                ["FDD ( підхід feature driven development)", 0],
                ["Scrum", 0]
            ]
        },
        {
            "question": "Що не є артефактом у Scrum?",
            "options": [
                ["власний список побажань замовника проекту", 1],
                ["вимір часу у межах одного спринту (burndown chart)", 0],
                [
                    "список задач для одного спринту, відсортованих за пріоритетом (sprint backlog)",
                    0
                ],
                [
                    "список високорівневих вимог до продукту, відсортованих за пріоритетом (product backlog)",
                    0
                ],
                ["Scrum покер", 0]
            ]
        },
        {
            "question": "Основними практиками методології  Kanban є?",
            "options": [
                [
                    "поділ процесу на спринти, ретроспектива, оцінка завдань у story points",
                    0
                ],
                [
                    "візуалізація робіт, обмеження кількості робіт у часі, управління потоками робіт",
                    1
                ],
                ["кодування, рефакторинг, спринти, показ Demo", 0],
                [
                    "послідовна розробка, розробка документації проекту, впровадження проекту",
                    0
                ],
                ["аналіз, проектування, розробка, тестування", 0]
            ]
        },
        {
            "question": "Як проходить візуалізація проекту в Kanban?",
            "options": [
                ["не проводиться", 0],
                ["за допомогою графіків процесів", 0],
                ["за допомогою Scrum дошки", 0],
                ["за допомогою Kanban дошки", 1],
                ["за допомогою XP дошки", 0]
            ]
        },
        {
            "question": "Чи існують відмінності при візуалізації робіт в Kanban і Scrum?",
            "options": [
                ["у Kanban немає засобів візуалізації", 0],
                ["у Scrum немає засобів візуалізації", 0],
                ["різниця незначна", 1],
                ["у Scrum- дошці є обмеження на WIP", 0],
                ["у Kanban –дошці немає стовпця InProgress", 0]
            ]
        },
        {
            "question": "Незалежні властивості програмної системи це:",
            "options": [
                [
                    "вимоги, що не можуть бути адресовані до одного з компонентів системи, але проявляються при їх взаємодії",
                    1
                ],
                [
                    "вимоги, що можуть бути адресовані тільки до одного з компонентів системи",
                    0
                ],
                [
                    "вимоги, що можуть бути адресовані тільки до певного класу компонентів системи",
                    0
                ],
                ["технічні вимоги до системи в цілому", 0],
                ["вимоги, які адресуються лише до функціоналу системи", 0]
            ]
        },
        {
            "question": "Бізнес вимоги до проекту визначають: ",
            "options": [
                ["високорівневі цілі організації або замовника проекту", 1],
                ["технічні вимоги", 0],
                ["системні вимоги", 0],
                ["функціональні вимоги", 0],
                ["нефункціональні вимоги", 0]
            ]
        },
        {
            "question": "Що знаходиться в стовпчику Цілі на дошці візуалізації в Kanban?",
            "options": [
                ["епіки", 0],
                ["Product backlog", 1],
                ["Story points", 0],
                ["Use case", 0],
                ["задачі", 0]
            ]
        },
        {
            "question": "Нефункціональні вимоги включають:",
            "options": [
                ["вимоги до якості, обмеження, бізнес правила", 1],
                ["вимоги до експлуатації", 0],
                ["вимоги до впровадження", 0],
                ["вимоги до тестування", 0],
                ["вимоги до вартості", 0]
            ]
        },
        {
            "question": "Що додається в стовпчик Черга на візуалізації в Kanban?",
            "options": [
                ["Sprint backlog", 0],
                ["User stories", 1],
                ["Product backlog", 0],
                ["Story points", 0],
                ["Use case", 0]
            ]
        },
        {
            "question": "Що означає рядок Expedite із завданнями на засоби візуалізації в Kanban?",
            "options": [
                ["такого рядку там немає", 0],
                ["екстрені для виконання завдання", 1],
                ["завдання для виконання", 0],
                ["тестовані завдання", 0],
                ["складні для виконання завдання", 0]
            ]
        },
        {
            "question": "У процесі роботи над вимогами до програмної системи у Product backlog визначається:",
            "options": [
                ["пріоритетність вимог за бажанням Scrum майстра", 0],
                ["системні вимоги", 0],
                [
                    "пріоритетність вимог відповідно до вимог замовника проекту та їх час виконання",
                    1
                ],
                ["технічні вимоги", 0],
                ["вимоги до архітектури системи ", 0]
            ]
        },
        {
            "question": "Чи є обмеження на види робіт при візуалізації в Kanban і ким вони визначаються",
            "options": [
                ["так, і вони визначаються членами команди", 1],
                ["так, і вони визначаються менеджером команди", 0],
                ["так, і вони визначаються stakeholder проекту", 0],
                ["так, і вони визначаються scrum master команди", 0],
                ["ні, обмежень на види робіт не має", 0]
            ]
        },
        {
            "question": "Хто визначає значення WIP на Kanban дошці?",
            "options": [
                ["визначається членами команди", 1],
                ["ніхто не визначає", 0],
                ["визначаються менеджером команди", 0],
                ["визначаються stakeholder команди", 0],
                ["визначаються scrum master команди", 0]
            ]
        },
        {
            "question": "Як визначається тривалість кожного спринту в Agile?",
            "options": [
                ["команда використовує метод «Гри у покер» ", 1],
                ["команда використовує метод «Гри у 21»", 0],
                ["визначається тільки замовником проекту", 0],
                ["визначається одноосібно Scrum майстром", 0],
                ["визначається одноосібно менеджером проекту", 0]
            ]
        },
        {
            "question": "Що повинна зробити команда, якщо до завершення спринту їй не вдається завершити усі «історії користувача», які були заплановані на цей спринт?",
            "options": [
                ["збільшити тривалість спринту та перенести кінець спринту", 0],
                [
                    "перенести цю частку «історій користувача» на наступний спринт",
                    1
                ],
                ["залишити все без жодних змін", 0],
                ["видалити ці «історії користувача» з цього релізу проекту", 0],
                [
                    "додати нових членів у команду розробників та внести зміни у бюджет проекту",
                    0
                ]
            ]
        },
        {
            "question": "Правилами ХР підходу є",
            "options": [
                [
                    "Coding, Customer available, Code standards, Test - Driven, Pair Programming, Sequential change integration, Integrate often, Collective code ownership",
                    1
                ],
                [
                    "Coding, Code standards, Pair Programming, Sequential change integration, Integrate often, Collective code ownership",
                    0
                ],
                [
                    "Designing, Simplicity, System Metaphor, CRC cards, Spike solutions, YAGNI",
                    0
                ],
                [
                    "Code standards, Test - Driven, Pair Programming, System Metaphor, CRC cards",
                    0
                ],
                [
                    "Simplicity, System Metaphor, CRC cards, Integrate often, Collective code ownership",
                    0
                ]
            ]
        },
        {
            "question": "Стійкість програмного забезпечення - це",
            "options": [
                [
                    "властивість, що здатна протистояти навмисним або ненавмисним деструктивним діям користувача",
                    0
                ],
                [
                    "здатність виконувати задані функції в умовах дії завад (помилок, збоїв, відмов), що виникають в непрограмних джерелах",
                    1
                ],
                [
                    "властивість, що характеризує здатність ПЗ продовжувати коректне функціонування, незважаючи на неправильні (помилкові) вхідні дані",
                    0
                ],
                [
                    "властивість, що характеризує здатність ПЗ автоматично коректно завершувати функціонування ПК, незважаючи на неправильні (помилкові) вхідні дані",
                    0
                ],
                ["властивість системи швидко відновлюватися", 0]
            ]
        },
        {
            "question": "Що з наведеного є критеріями оцінювання зручності інтерфейсів? ",
            "options": [
                ["швидкість навчання;", 0],
                ["адаптація до стилю роботи користувача;", 1],
                [
                    "набір методів взаємодії комп'ютерної програми і користувача цієї програми",
                    0
                ],
                ["набір методів для взаємодії між програмами", 0],
                ["спосіб взаємодії між об'єктами", 0]
            ]
        }
    ]
}
